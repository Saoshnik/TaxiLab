v 1.0
2. Реализовать GetData() возвращающие отдельные типы: List<BudgetEngine>, List<PremiumCar>... ( c помощью Enum, на подобие Category.Attributes.GetNamedItem("PremiumTaxi") передавая запрос)
6. В конце добавить вопрос о перезаписи файла xml с конфигурациями всех Taxi

v 4.0
1. Стоит ли мне добавлять метод Add в ITaxi и убирать из интерфейса свойство с Parts в класс. Зачем это в Computering.sin

2. Продолжение, два варианта: либо получать объект конкретного класса и писать метод GetPossibleTypes. Либо передавать действие: через делегаты или через реализацию как ToString.

4. Как использовать ярлыки или добавить папку bin чтобы можно было из проекта работать с файлами xml

5. Поскольку создать объект абстрактного класса нельзя, то и использовать метод List<T>.ConvertAll<TOutput>(Converter<T,TOutput>) нельзя.
Поэтому в сериалайзере нет метода возвращающего T и принимающего T

6. Да как блин привести один тип к другому, -_- 


Архив:
3. Почему статический конструкор не вызывается до получения свойства из статического класса? 
Есть ли способ вызвать статический коструктор раньше чем получить результат в Main() от геттера свойства Taxis 
получающего значение по умолчанию от инициализатор статического поля

вопрос из доков: Если вы не предоставили статический конструктор для инициализации статических полей, 
все статические поля инициализируются значениями по умолчанию, которые указаны в разделе Значения по умолчанию типов C#. 
Как предоставить статический конструктор для инициализации статических полей

справка: https://stackoverflow.com/questions/8285168/why-static-fields-initialization-occurs-before-the-static-constructor
возможное решение: https://overcoder.net/q/287119/как-работает-инициализация-статического-поля-в-c